diff --git a/afio.c b/afio.c
index 048f9b6..0b7f85b 100644
--- a/afio.c
+++ b/afio.c
@@ -228,6 +228,8 @@ extern char *sys_errlist[];
 #endif
 #endif /* major */
 
+#define XTERM_CLEAR_LINE "\x1B[0K"
+
 #include "afio.h"
 
 
@@ -263,6 +265,7 @@ extern char *sys_errlist[];
      STATIC short zflag;	/* Print final statistics */
      STATIC short flag0;	/* Input names terminated with '\0' */
      STATIC short Jflag=0;	/* Keep going after archive write error */
+     STATIC short Nflag=0;      /* JRG Experimental. Do XTerm formatting tricks to improve the interaction with mbuffer reporting. */
      STATIC short hidequit;	/* show the quit option? */
      STATIC short abspaths;	/* allow absolute path names? */
      STATIC uint arbsize = BLOCK;	/* Archive block size */
@@ -360,7 +363,7 @@ int main (int ac, char **av)
    */
 
   while ((c = options (ac, av,
-         "aioprtIOVCb:c:de:fghjklmns:uvxXy:Y:zFKZL:R:qAE:G:M:w:W:T:SBD:P:Q:U4JH:0@:N:3:1:92:56:78:"))
+         "aioprtIOVCb:c:de:fghjklmns:uvxXy:Y:zFKZL:R:qAE:G:M:w:W:T:SBD:P:Q:U4JH:0@:N3:1:92:56:78:"))
         )
     {
       switch (c)
@@ -456,6 +459,9 @@ int main (int ac, char **av)
 	case 'n':
 	  ++nflag;
 	  break;
+	case 'N':
+	  ++Nflag;
+	  break;
 	case 's':
 	  sflagused = 1;
 	  /* Do a 'dry run' to check all values for syntax errors */
@@ -1249,20 +1255,23 @@ in (av)
 	  else
 	    if (vflag)
 	      {
-		  /* we cast to double and print as floating point because
-		     %Lu printing is buggy above 4G (at least with my C library). */
-		  if(printbytepos) fprintf(stderr,"%.0f ",(double)bytepos);
-
-		  if (*uncompto)
-		    res = fprintf (stderr, "%s -- uncompressed\n", uncompto);
-		  else
-		    res = fprintf (stderr, "%s -- okay\n", name);
-
-		  /* check for broken pipe on stderr */
-		  if(res<0) {
-		    if(errno == EPIPE)
-		      fatal("<stderr>", syserr());
-		  }
+		const char * control_seq = (Nflag) ?  XTERM_CLEAR_LINE : "";
+
+		/* we cast to double and print as floating point because
+		   %Lu printing is buggy above 4G (at least with my C library). */
+		if(Nflag) fprintf(stderr, "\r");
+		if(printbytepos) fprintf(stderr,"%.0f ",(double)bytepos);
+
+		if (*uncompto)
+		  res = fprintf (stderr, "%s -- uncompressed%s\n", uncompto, control_seq);
+		else
+		  res = fprintf (stderr, "%s -- okay%s\n", name, control_seq);
+
+		/* check for broken pipe on stderr */
+		if(res<0) {
+		  if(errno == EPIPE)
+		    fatal("<stderr>", syserr());
+		}
 	      }
 	}
     }
@@ -3862,6 +3871,9 @@ out (av)
 	}
 	else if (vflag)
 	  {
+	    char * control_seq = (Nflag) ? XTERM_CLEAR_LINE : "";
+
+	    if(Nflag) fprintf(stderr, "\r");
 	    if(printbytepos) fprintf(stderr,"%.0f ",(double)bytepos);
 
 	    if ((name[0] == '/') && !abspaths && (name[1]!=0))
@@ -3874,9 +3886,9 @@ out (av)
 	       */
 
 	    if ((fd==ZIPFD)||(fd==MEMFD))
-		VOID fprintf (stderr, "(%02d%%)\n", compression);
+	      VOID fprintf (stderr, "(%02d%%)%s\n", compression, control_seq);
 	    else
-		VOID fputs ("okay\n", stderr);
+	      VOID fprintf(stderr, "okay%s\n", control_seq);
 	}
 
 	/* ASX check if file changed between the begining
