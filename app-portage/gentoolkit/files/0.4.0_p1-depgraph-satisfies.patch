diff --git a/man/equery.1 b/man/equery.1
index b89b86c..579a55a 100644
--- a/man/equery.1
+++ b/man/equery.1
@@ -204,6 +204,10 @@ Do not show the dependency atom that match the package.
 .br
 Do not show USE flags.
 .HP
+.B \-s, \-\-satisfies
+.br
+Presented package is a virtual; only show packages that satisfy the virtual.
+.HP
 .B \-l, \-\-linear
 .br
 Do not format the graph by indenting dependencies. This option will print the
diff --git a/pym/gentoolkit/equery/depgraph.py b/pym/gentoolkit/equery/depgraph.py
index 9fbdd42..236e8ee 100644
--- a/pym/gentoolkit/equery/depgraph.py
+++ b/pym/gentoolkit/equery/depgraph.py
@@ -40,9 +40,12 @@ QUERY_OPTS = {
 	"in_porttree": True,
 	"in_overlay": True,
 	"include_masked": True,
+	"satisfies": False,
 	"show_progress": (not CONFIG['quiet'])
 }
 
+not_installed_count = 0
+
 # =========
 # Functions
 # =========
@@ -67,6 +70,7 @@ def print_help(with_description=True):
 		(" -A, --no-atom", "do not show dependency atom"),
 		(" -M, --no-mask", "do not show masking status"),
 		(" -U, --no-useflags", "do not show USE flags"),
+		(" -s, --satisfies","only display packages that satisfy the virtual"),
 		(" -l, --linear", "do not format the graph by indenting dependencies"),
 		("     --depth=N", "limit dependency graph to specified depth")
 	)))
@@ -89,6 +93,8 @@ def parse_module_options(module_opts):
 			QUERY_OPTS["no_mask"] = True
 		if opt in ('-l', '--linear'):
 			QUERY_OPTS["no_indent"] = True
+		if opt in ('-s', '--satisfies'):
+			QUERY_OPTS["satisfies"] = True
 		if opt in ('--depth'):
 			if posarg.isdigit():
 				depth = int(posarg)
@@ -134,6 +140,8 @@ def depgraph_printer(
 	use = ''
 	atom = ''
 	mask = ''
+	global not_installed_count
+	
 	try:
 		if not no_atom:
 			if dep.operator == '=*':
@@ -154,6 +162,9 @@ def depgraph_printer(
 				portage.settings["ACCEPT_KEYWORDS"],
 				pkg.environment('KEYWORDS'))]
 		mask = pp.masking(mask)
+	if QUERY_OPTS['satisfies'] and not pkg.is_installed():
+		not_installed_count += 1
+		return
 	try:
 		pp.uprint(' '.join(
 			(indent, decorator, pp.cpv(str(pkg.cpv)), atom, mask, use)
@@ -168,8 +179,12 @@ def make_depgraph(pkg, printer_fn):
 
 	print()
 	if CONFIG['verbose']:
-		pp.uprint(" * " + pp.subsection("dependency graph for ") +
-			pp.cpv(str(pkg.cpv)))
+		if QUERY_OPTS['satisfies']:
+			pp.uprint(" * " + pp.subsection("packages satisfying ") + 
+					  pp.cpv(str(pkg.cpv)))
+		else:
+			pp.uprint(" * " + pp.subsection("dependency graph for ") + 
+					  pp.cpv(str(pkg.cpv)))
 	else:
 		pp.uprint("%s:" % pkg.cpv)
 
@@ -185,7 +200,7 @@ def make_depgraph(pkg, printer_fn):
 
 	if CONFIG['verbose']:
 		pkgname = pp.cpv(str(pkg.cpv))
-		n_packages = pp.number(str(len(deps)))
+		n_packages = pp.number(str(len(deps) - not_installed_count))
 		max_seen = pp.number(str(max(x[0] for x in deps)))
 		info = "[ %s stats: packages (%s), max depth (%s) ]"
 		pp.uprint(info % (pkgname, n_packages, max_seen))
@@ -194,8 +209,8 @@ def make_depgraph(pkg, printer_fn):
 def main(input_args):
 	"""Parse input and run the program"""
 
-	short_opts = "hAMUl"
-	long_opts = ('help', 'no-atom', 'no-useflags', 'no-mask', 'depth=')
+	short_opts = "hAMUls"
+	long_opts = ('help', 'no-atom', 'no-useflags', 'no-mask', 'depth=', 'satisfies')
 
 	try:
 		module_opts, queries = gnu_getopt(input_args, short_opts, long_opts)
@@ -245,7 +260,10 @@ def main(input_args):
 			)
 
 		for pkg in matches:
-			make_depgraph(pkg, printer)
+			if QUERY_OPTS['satisfies'] and pkg.category != "virtual":
+				print(pkg.cpv, ": --satisfies only makes sense for virtuals.")
+			else:
+				make_depgraph(pkg, printer)
 
 		first_run = False
 
